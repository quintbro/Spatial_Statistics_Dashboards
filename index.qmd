---
title: "Homework 1 Spatial Statistics"
format: 
  dashboard: 
    resources: 
      - shinylive-sw.js
server: shiny
---

```{r output=FALSE}
#| context: setup
library(tidyverse)
library(tidycensus)
library(plotly)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(DT)
library(sf)
theme_set(theme_bw())
```



## Top Row

### Column
```{r output=FALSE}
covid <- vroom::vroom("time_series_covid19_confirmed_US.csv") %>%
  mutate(FIPS = as.character(FIPS)) %>%
  dplyr::select(FIPS, "1/15/22")


data_sf <- get_acs(
  geography = "county",
  variables = "B01003_001",
  state = "TX",
  geometry = T,
  year = 2022
)



merge_data = left_join(data_sf, covid, join_by(GEOID == FIPS))

data <- merge_data %>%
  mutate(rate = `1/15/22` / estimate) %>%
  mutate(NAME = str_remove(NAME, ", Texas"))
```

```{r warning =FALSE}
#| title: "Population by COVID Rate"
#| padding: 0px


# ggplot(data) +
#   geom_sf(aes(fill = rate)) + 
#   scale_fill_distiller(palette = "Spectral") +
#   theme_void() +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   labs(
#     title = "Chlorapleth Map of COVID Rates"
#   )

plot <- ggplot(data) +
  geom_point(aes(x = (estimate / 1000), y = rate)) +
  labs(
    x = "Population (In Thousands)",
    y = "Covid Rate"
  )
  

ggplotly(plot)
```

### Column

```{r}
#| title: "Leaflet Interactive Map"
#| padding: 0px
pal <- colorNumeric(palette = rev(RColorBrewer::brewer.pal(11, "Spectral")), domain = data$rate)

labels <- sprintf("<strong>Name:</strong> %s<br/><strong>COVID Rate:</strong> %g%%", 
                  data$NAME, round(100*data$rate, 2)) %>%
  lapply(htmltools::HTML)

leaflet() %>%
  addTiles() %>%
  setView(lat = 31.9686, lng = -99.9018, zoom = 5) %>%
  addPolygons(data = data, 
              color = pal(data$rate), 
              stroke = F, 
              fillOpacity = 1,
              label = labels,
              layerId = ~NAME) %>%
  addPolylines(data = data, color = "black", weight = 0.3, opacity = 1)
```

## Row

```{r}
table_data <- data %>%
  tibble() %>%
  select(NAME, estimate, "1/15/22", rate) %>%
  rename(County = NAME, Population = estimate, "Covid Cases" = "1/15/22", Rate = rate) %>%
  mutate(Rate = round(Rate*100, 3)) %>%
  arrange(desc(Rate)) %>%
  mutate("Top 10" = c(rep(TRUE, 10), rep(FALSE, nrow(data) - 10)))

datatable(
  table_data,
  options = list(pagelength = 5, autowidth = T)
) %>%
  formatStyle("Top 10",
              target = "row",
              backgroundColor = styleEqual(
                c(TRUE, FALSE),
                c("#FFE5DE", NA)
              ))
```

